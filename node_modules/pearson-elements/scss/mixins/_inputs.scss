@mixin pe-placeholder {
  &::-webkit-input-placeholder { @content }
  &::-moz-placeholder { @content }
  &:-moz-placeholder { @content }
  &:-ms-input-placeholder { @content }
}

@mixin pe-input(
  $bg,
  $border,
  $color,
  $disabled-bg,
  $disabled-color,
  $active-shadow: none
) {

  & input,
  & textarea {
    color: $color;
    background: $bg;
    border: $border;
    -webkit-appearance: none;
    border-radius: $pe-input-border-radius;

    @include pe-placeholder {
      font-style: $pe-input-placeholder-text;
      color: $pe-input-placeholder-color;
    }

    &:focus {
      outline: 0;
      border: $pe-input-focus-border;
      box-shadow: $pe-input-focus-box-shadow;
    }

  }

  & input:disabled,
  &.pe-input--disabled input {
    color: $disabled-color;
    background: $disabled-bg;

    @include pe-placeholder {
      color: $disabled-color;
    }

  }

  & textarea:disabled,
  &.pe-textarea--disabled textarea {
    color: $disabled-color;
    background: $disabled-bg;

    @include pe-placeholder {
      color: $disabled-color;
    }
  }

  &.pe-input--readonly input,
  &.pe-textarea--readonly textarea {
    background: $disabled-bg;
  }

  //these are not really supported yet, and interfere with earlier rule

  & input:read-only,
  & input:-moz-read-only {
    background: $disabled-bg;
  }

  & input:invalid,
  &.pe-input--error input,
  & textarea:invalid,
  &.pe-textarea--error textarea {
    border: $pe-input-error-border;

    &:focus {
      box-shadow: $pe-input-error-box-shadow;
    }
  }

  // to be placed on error messages

  & .pe-error-text {
    color: $pe-input-error-text-color;
  }

  &.pe-input--small input {
    font-size: $pe-input-small-font-size;
    height: $pe-input-small-height;
    line-height: $pe-input-small-line-height;
    padding: $pe-input-small-padding;
  }

  &.pe-textarea--small textarea {
    font-size: $pe-input-small-font-size;
    padding: $pe-textarea-small-padding;
  }
}
